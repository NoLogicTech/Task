@page "/ListaTarefa"

<!-- --------------------------------------------------------------------------------------------------------------------------------------------------- -->
<!--                                                        Testatando Drang and drop                                                                    -->
<!-- --------------------------------------------------------------------------------------------------------------------------------------------------- -->

<div class="tarefa-status">
    <h3>@TarefaTarefasuperiorid (@tarefas.Count())</h3>

    <ul class="dropzone @dropClass"
        ondragover="event.preventDefault();"
        ondragstart="event.dataTransfer.setData('', event.target.id);"
        @ondrop="HandleDrop"
        @ondragenter="HandleDragEnter"
        @ondragleave="HandleDragLeave">


        @foreach (var tarefa in tarefas)
        {
            <InputTarefa Tarefa="@tarefa" />
        }

    </ul>
</div>


@code {

    [CascadingParameter] Projeto Container { get; set; }
    [Parameter] public int TarefaTarefasuperiorid { get; set; }
    [Parameter] public int[] AllowedStatuses { get; set; }

    List<Tarefa> tarefas = new List<Tarefa>();
    string dropClass = "";

    protected override void OnParametersSet()
    {
        tarefas.Clear();
        tarefas.AddRange(Container.tarefas.Where(x => x.TarefaTarefasuperiorid == TarefaTarefasuperiorid));

    }

    private void HandleDragEnter()
    {
        if (TarefaTarefasuperiorid == Container.Payload.TarefaTarefasuperiorid)
        {
            Console.WriteLine($"nem tente enxeto id {Container.Payload.TarefaId} trs {TarefaTarefasuperiorid} elem {Container.Payload.TarefaTarefasuperiorid}");
            return;
        }

        if (AllowedStatuses != null && !AllowedStatuses.Contains(Container.Payload.TarefaTarefasuperiorid))
        {
            Console.WriteLine($"{AllowedStatuses != null}{!AllowedStatuses.Contains(Container.Payload.TarefaTarefasuperiorid)}");
            Console.WriteLine($"id {Container.Payload.TarefaId} trs {TarefaTarefasuperiorid} elm { Container.Payload.TarefaTarefasuperiorid}");
            dropClass = "can-drop";

        }
        else
        {
            Console.WriteLine($"faslso ------------------------------- {TarefaTarefasuperiorid} {Container.Payload.TarefaTarefasuperiorid}");
            dropClass = "no-drop";
        }
    }

    private void HandleDragLeave()

    {
        dropClass = "";
    }

    private async Task HandleDrop()
    {
        dropClass = "";

        if (AllowedStatuses != null && !AllowedStatuses.Contains(Container.Payload.TarefaTarefasuperiorid))
        {
            await Container.UpdateTarefaAsync(TarefaTarefasuperiorid);
            return;
        }
    }
}
